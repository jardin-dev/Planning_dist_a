/*!
 * Planning 
 * Version: 1.1 30/01/23 
 *
 * Copyright (c) 2019 - 2023 ALL RIGHTS RESERVED
 * auteur Mickael FEUVRIER
 * 
 */
$(()=>{$("<div />").attr("id","context-menu").appendTo("#planning"),$("<div />").attr("id","scheduler").appendTo("#planning");class modifStore{constructor(type,val){this.type=type,this.value=val}}class queryFM{constructor(script,param){this.script=script,this.param=param}}let appointmentDownloaded=[],popupOption=null;const W_HEIGHT=$(window).height(),LOCATION=[{id:"1",text:"ExtÃ©rieur",color:"#F5DF7D"},{id:"2",text:"Diapason",color:"#C3FAAA"},{id:"3",text:"Bureau",color:"#BB9AFE"},{id:"4",text:"Domicile",color:"#FFA069"}],APPOINTMENT_STORE=new DevExpress.data.ArrayStore({data:appointmentDownloaded,key:"id",paginate:!1,onInserted:e=>{let val=new modifStore("insert",e)},onUpdated:(key,e)=>{let val=new modifStore("update",e)},onRemoved:key=>{let val=new modifStore("remove",key)}}),APPOINTMENT_SOURCE=new DevExpress.data.DataSource({store:APPOINTMENT_STORE,paginate:!1,reshapeOnPush:!0}),TEACHER_STORE=new DevExpress.data.ArrayStore({data:[],key:"id",onInserted:value=>{SQL_InsertFM("Teacher",value)},onUpdated:(key,value)=>{SQL_UpdateFM("Teacher",key,value)},onRemoved:key=>{SQL_removeFM("Teacher",key)}});getDataAppointmentFM_API("Appointment_without_recurrence",getDateFormatDDMMAA(new Date),"awr_Date"),getDataTeacherFM_API("Equipe"),DevExpress.localization.locale(navigator.language),DevExpress.localization.formatMessage;const SCHEDULER=$("#scheduler").dxScheduler({height:"auto",useDropDownViewSwitcher:!1,dataSource:APPOINTMENT_SOURCE,adaptivityEnabled:!1,showAllDayPanel:!1,showCurrentTimeIndicator:!1,firstDayOfWeek:1,currentView:"day",crossScrollingEnabled:!1,groupByDate:!0,startDayHour:8,endDayHour:18.5,groups:["teacherID"],editing:!1,views:[{type:"day"}],resources:[{key:"teacherID",fieldExpr:"teacherID",allowMultiple:!1,dataSource:[],label:"Enseignant"},{key:"id",fieldExpr:"locationID",label:"Lieux",dataSource:LOCATION}],onAppointmentRendered:()=>{widthAppointment()},onAppointmentUpdated:e=>{e.component.repaint(),e.component.on([{repaint:afterRepaint()}])},timeCellTemplate:(data,i,element)=>{element.text(data.text).css({color:"#2394ce",height:cellHeight()})},appointmentTemplate:e=>{let startHour=new Date(e.appointmentData.startDate).toLocaleTimeString(),endHour=new Date(e.appointmentData.endDate).toLocaleTimeString(),location;location=void 0===e.appointmentData.locationID?null:e.appointmentData.locationID,void 0===e.appointmentData.description?desc="":desc=$("<div />").html(`${e.appointmentData.description}`).addClass("app-description");let wrapper=$("<div />").addClass("app-content"),text=$("<div />").html(`${e.appointmentData.text}`).addClass("app-text"),hour=$("<div />").html(`${startHour.slice(0,-3)} - ${endHour.slice(0,-3)}`).addClass("app-hour"),stat=$("<div />").addClass("app-statut");if(e.appointmentData.recurrenceRule&&text.addClass("dx-icon-ja-reload"),wrapper.append([text,hour,stat]),desc&&wrapper.append(desc),location&&"teacherID"==SCHEDULER.option("groups")){let locationFind=LOCATION.find(e=>e.id===location);stat.html(`${locationFind.text}`),wrapper.css("background-color",`${locationFind.color}`)}else if(location||"teacherID"!=SCHEDULER.option("groups")){let teacherFind=TEACHER_STORE._array.find(f=>f.id===e.appointmentData.teacherID);stat.html(`${teacherFind.text}`),wrapper.css("background-color",`${teacherFind.color}`)}else wrapper.css("background-color","#b9b9bd");return wrapper.dxScrollView({}).dxScrollView("instance"),wrapper},dataCellTemplate:(cellData,index,container)=>{container.css("height",cellHeight());const hours=`${cellData.startDate.getHours()}:${cellData.startDate.getMinutes()}:00`;hours>="12:30"&&hours<"13:30"&&container.addClass("dx-template-Pose")},onAppointmentClick:function(e){e.cancel=!0,e.component.showAppointmentPopup(e.appointmentData)},onAppointmentFormOpening:e=>{let selectLocation;e.form.itemOption("mainGroup.repeat","visible",!1),e.form.itemOption("mainGroup.allDay","visible",!1),e.form.getEditor("locationID").option("dataSource",LOCATION)},onOptionChanged:e=>{if("currentDate"===e.name){let currentDate=SCHEDULER.option("currentDate");getDataAppointmentFM_API("Appointment_without_recurrence",getDateFormatDDMMAA(SCHEDULER.option("currentDate")),"awr_Date"),$(".itemSem").css("display","none"),$(`.sem-${getWeekNumber(currentDate)}`).css("display","block"),$("#button-sem .dx-button-text").text(getWeekNumber(currentDate)),SCHEDULER.repaint(),SCHEDULER.on([{repaint:afterRepaint()}])}},customizeDateNavigatorText:function(e){const JOUR=new Array("Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi");return JOUR[e.startDate.getDay()]+" "+e.text}}).dxScheduler("instance");function widthAppointment(){const WIDTH_CELL=$(".dx-scheduler-date-table-cell").width();$(".dx-scheduler-appointment-vertical").width(WIDTH_CELL+1.6)}function cellHeight(){const HEIGHT_CELL=(W_HEIGHT-116)/21-1;return HEIGHT_CELL}function afterRepaint(){$(".dx-scheduler-view-switcher").remove(),$(".dx-scheduler-view-switcher-label").remove(),initWeekNumber()}function initWeekNumber(){$("#button-sem .dx-button-text").text(getWeekNumber(SCHEDULER.option("currentDate")))}function getWeekNumber(day){let d=day,j;j=0==d.getDay()?d.getDate()+1:d.getDate(),d=new Date(Date.UTC(d.getFullYear(),d.getMonth(),j)),d.setUTCDate(d.getUTCDate()+4-(d.getUTCDay()||7));const YEAR_START=new Date(Date.UTC(d.getUTCFullYear(),0,1)),WEEK_NUM=Math.ceil(((d-YEAR_START)/864e5+1)/7);return WEEK_NUM}function goWeek(sem,an){let firstDayAn=new Date;firstDayAn.setUTCFullYear(an,0,1);let firstDayOfYear,firstDayLength=8-firstDayAn.getDay();semLenght=firstDayLength>=4?sem-2:sem-1;let addDays=7*semLenght+firstDayLength+1,finalDate=new Date;finalDate.setFullYear(an,0,addDays);let firstDayOfSem=new Date(finalDate);SCHEDULER.option("currentDate",firstDayOfSem)}function getDateFormatAAAAMD(date){let m=date.getMonth()+1,d=date.getDate(),a;return`${date.getFullYear()}/${m}/${d}`}function getDateFormatDDMMAA(date){let m=date.getMonth()+1,d=date.getDate(),a;return d<10&&(d="0"+d),m<10&&(m="0"+m),d+"/"+m+"/"+date.getFullYear()}function getDataAppointmentFM_API(table,para,enreg){let paraJson=new Object;return paraJson.table=table,paraJson.enreg=enreg,paraJson.date=para,$.ajax({url:"./lib/php/getTheData.php",method:"POST",data:paraJson,dataType:"JSON"}).done((function(data){console.log(data),$.each(data,(function(i,value){let appointment=JSON.parse(value.fieldData.awr_JSON);APPOINTMENT_STORE.push([{type:"insert",data:appointment,index:i}])}))})),!0}function getDataTeacherFM_API(para){let paraJson=new Object;return paraJson.table=para,$.ajax({url:"./lib/php/getTheData.php",method:"POST",data:paraJson,dataType:"JSON"}).done((function(data){$.each(data,(function(i,value){let teacher=JSON.parse(value.fieldData.equipeJSON_new);TEACHER_STORE.push([{type:"insert",data:teacher,index:i}])})),SCHEDULER.option("resources[0].dataSource",TEACHER_STORE._array)})),!0}afterRepaint()});